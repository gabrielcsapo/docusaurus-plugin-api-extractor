"use strict";(self.webpackChunkexample_api=self.webpackChunkexample_api||[]).push([[6886],{5242:function(e,t,a){a.d(t,{Zo:function(){return u},kt:function(){return d}});var n=a(3929);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),c=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},u=function(e){var t=c(e.components);return n.createElement(o.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},s=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),s=c(a),d=r,f=s["".concat(o,".").concat(d)]||s[d]||m[d]||i;return a?n.createElement(f,l(l({ref:t},u),{},{components:a})):n.createElement(f,l({ref:t},u))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=s;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p.mdxType="string"==typeof e?e:r,l[1]=p;for(var c=2;c<i;c++)l[c]=a[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}s.displayName="MDXCreateElement"},2552:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return p},contentTitle:function(){return o},metadata:function(){return c},toc:function(){return u},default:function(){return s}});var n=a(4834),r=a(8265),i=(a(3929),a(5242)),l=["components"],p={id:"example-api.animal",hide_title:!0,custom_edit_url:null,title:"Animal interface"},o=void 0,c={unversionedId:"example-api/example-api.animal",id:"example-api/example-api.animal",isDocsHomePage:!1,title:"Animal interface",description:"Home &gt; example-api &gt; Animal",source:"@site/docs/example-api/example-api.animal.md",sourceDirName:"example-api",slug:"/example-api/example-api.animal",permalink:"/docusaurus-plugin-api-extractor/docs/example-api/example-api.animal",editUrl:null,tags:[],version:"current",frontMatter:{id:"example-api.animal",hide_title:!0,custom_edit_url:null,title:"Animal interface"},sidebar:"apiSideBar",previous:{title:"example-api package",permalink:"/docusaurus-plugin-api-extractor/docs/example-api/example-api"},next:{title:"Animal.speak() method",permalink:"/docusaurus-plugin-api-extractor/docs/example-api/example-api.animal.speak"}},u=[{value:"Animal interface",id:"animal-interface",children:[],level:2},{value:"Example",id:"example",children:[],level:2},{value:"Methods",id:"methods",children:[],level:2}],m={toc:u};function s(e){var t=e.components,a=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docusaurus-plugin-api-extractor/docs/"},"Home")," ",">"," ",(0,i.kt)("a",{parentName:"p",href:"/docusaurus-plugin-api-extractor/docs/example-api/example-api"},"example-api")," ",">"," ",(0,i.kt)("a",{parentName:"p",href:"/docusaurus-plugin-api-extractor/docs/example-api/example-api.animal"},"Animal")),(0,i.kt)("h2",{id:"animal-interface"},"Animal interface"),(0,i.kt)("p",null,"An interface to define an animal"),(0,i.kt)("b",null,"Signature:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"export interface Animal \n")),(0,i.kt)("h2",{id:"example"},"Example"),(0,i.kt)("p",null,"Here's a simple example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"class Cow implements Animal {\n  speak() {\n    return 'mooo';\n  }\n}\n")),(0,i.kt)("h2",{id:"methods"},"Methods"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Method"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docusaurus-plugin-api-extractor/docs/example-api/example-api.animal.speak"},"speak()")),(0,i.kt)("td",{parentName:"tr",align:null})))))}s.isMDXComponent=!0}}]);